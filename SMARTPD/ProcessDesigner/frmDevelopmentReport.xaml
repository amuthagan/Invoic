<UserControl x:Class="ProcessDesigner.frmDevelopmentReport"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:si="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"       
        xmlns:bhCustCtrl="clr-namespace:BHCustCtrl;assembly=BHCustCtrl"
        xmlns:toolKit="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:UICommon="clr-namespace:ProcessDesigner.UICommon" 
        xmlns:uc="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls"  
        xmlns:t="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:Control="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls"    
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:Lookup="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls"
        Height="600" Width="1000" MinWidth="1000"  Background="{StaticResource WindowBackground}" Loaded="UserControl_Loaded" >
    <UserControl.Resources>
        <UICommon:DateTimeConverter x:Key="DateTimeConverter"/>
    </UserControl.Resources>
    <Border BorderThickness="1" BorderBrush="Black"  Margin="10,10,10,10">
        <Grid KeyboardNavigation.TabNavigation="Cycle">
            <Grid.RowDefinitions>
                <RowDefinition Height="10*"></RowDefinition>
                <RowDefinition Height="10*"></RowDefinition>
                <RowDefinition Height="60*"></RowDefinition>
                <RowDefinition Height="20*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" >
                <ToolBarTray>
                    <ToolBar x:Name="Part1" BandIndex="0" Height="58" KeyboardNavigation.TabNavigation="None" >
                        <Button Content="Add F3" Grid.Row="0" Grid.Column="0" Width="73" Height="50"  Command="{Binding OnAddCommand}" KeyboardNavigation.IsTabStop="False" IsEnabled="{Binding AddButtonIsEnable}" ToolTip="Add New Record" Lookup:AddedProperty.Image="Images/Add.png"  ></Button>
                        <Button Content="Edit/View F5" Grid.Row="0" Grid.Column="1" Width="80" Height="50" KeyboardNavigation.IsTabStop="False" IsEnabled="{Binding EditButtonIsEnable}" Command="{Binding OnEditViewCommand }"  ToolTip="Edit or View Record" Lookup:AddedProperty.Image="Images/Edit.png"></Button>
                        <Button Content="Save Ctrl+S" Grid.Row="0" Grid.Column="3"  Width="69" Height="50"  IsEnabled="{Binding SaveButtonIsEnable}" KeyboardNavigation.IsTabStop="False" Command="{Binding OnSaveCommand }"  ToolTip="Save Record" Lookup:AddedProperty.Image="Images/Save.png" />
                        <Button Content="Print F8 " Height="50" Margin="2,0,2,0" IsEnabled="{Binding PrintButtonIsEnable,UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" Padding ="10,0,10,0" Control:AddedProperty.Image="Images/Print.png" Command="{Binding OnPrintCommand}"/>
                        <Button Content="Search " Height="50" Margin="2,0,2,0" Padding ="10,0,10,0" Control:AddedProperty.Image="Images/Search.png" KeyboardNavigation.IsTabStop="False"/>
                        <Menu ToolBar.OverflowMode="Always" >
                            <StackPanel Background="White" >
                                <MenuItem  Header="Cost Sheet Search" Command="{Binding CostSheetSearchCommand}"/>
                                <MenuItem  Header="Product Search" Command="{Binding ProductSearchCommand}"/>
                                <MenuItem  Header="Tools Search" Command="{Binding ToolsSearchCommand}"/>
                            </StackPanel>
                        </Menu>
                    </ToolBar>
                    <ToolBar Height="58" KeyboardNavigation.TabNavigation="None">
                        <Button Content="Undo " Visibility="Collapsed" Height="50" KeyboardNavigation.IsTabStop="False" Margin="2,0,2,0" Padding ="10,0,10,0" Command="{Binding OnUndoCommand}" Control:AddedProperty.Image="Images/Undo.png" />
                        <Button Content="Show Related" Height="50" KeyboardNavigation.IsTabStop="False" Margin="2,0,2,0" Padding ="10,0,10,0"  Control:AddedProperty.Image="Images/ShowRelated.png" />
                        <Menu ToolBar.OverflowMode="Always" >
                            <StackPanel Background="White" >
                                <MenuItem  Header="Process Sheet" Command="{Binding ProcessSheetCommand}" />
                                <MenuItem Header="Control Plan" Command="{Binding ControlPlanCommandm}" />
                                <MenuItem  Header="Drawings" Command="{Binding DrawingsCommand}" />
                                <MenuItem  Header="Tool Schedule" Command="{Binding ToolScheduleCommand}"/>
                                <Separator />
                                <MenuItem  Header="Product Search" Command="{Binding ProductSearchCommand}"/>
                                <MenuItem  Header="Cost Sheet Search" Command="{Binding CostSheetSearchCommand}"/>
                                <MenuItem  Header="Tools Search" Command="{Binding ToolsSearchCommand}"/>
                            </StackPanel>
                        </Menu>
                    </ToolBar>
                    <ToolBar  Height="58" KeyboardNavigation.TabNavigation="None">
                        <Button Content="Close F9" KeyboardNavigation.IsTabStop="False" Grid.Row="0" Grid.Column="4" Width="65" Height="50" Command="{Binding OnCloseCommand}"  ToolTip="Close Form" Lookup:AddedProperty.Image="Images/Close.png"></Button>
                    </ToolBar>
                </ToolBarTray>
            </Border>
            <Grid Grid.Row="1" Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="47*"></RowDefinition>
                    <RowDefinition Height="53*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="13*" ></ColumnDefinition>
                    <ColumnDefinition Width="10*"  ></ColumnDefinition>
                    <ColumnDefinition Width="5*" ></ColumnDefinition>
                    <ColumnDefinition Width="10*" ></ColumnDefinition>
                    <ColumnDefinition Width="9*" ></ColumnDefinition>
                    <ColumnDefinition Width="1*" ></ColumnDefinition>
                    <ColumnDefinition Width="45*" ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.ColumnSpan="2" Width="100" HorizontalAlignment="Left" x:Name="lblPartNo"  Text="Part No :" Grid.Row="0"  Grid.Column="0" Margin="5,0,0,0" FontWeight="Bold"></TextBlock>
                <TextBlock  x:Name="lblRunNo" Text="Run No : " Grid.Row="0"  Grid.Column="2" ></TextBlock>
                <TextBlock x:Name="lblDescription" FontWeight="Bold" Text="Description :" Grid.Row="0"  Grid.Column="4" TextAlignment="Right"></TextBlock>
                <!--<Control:ComboBoxCus x:Name="ltbPartNo" Height="25" Grid.Row="0"  Grid.Column="1" ToolTip="Enter / Select Part Nos"  />-->
                <!--<TextBox  Grid.Row="0" Width="110" HorizontalAlignment="Left" Grid.Column="1" Grid.ColumnSpan="2" Margin="-70,0,0,0"   ></TextBox>-->
                <Lookup:ComboBoxCus FontWeight="Bold" CharacterCasingText="Upper" MaxLength="11" Width="160" IsEditable="True" IsReadOnly="False" UICommon:FocusExtension.IsFocused="{Binding FocusButton,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Grid.Row="0" Grid.ColumnSpan="2" Tag="Please select Part No." Margin="66,0,0,0.286" x:Name="cmbPartNo" 
					DataSource="{Binding DevelopmentReportModel.PartNoDetails,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True, ValidatesOnDataErrors=True}" SelectedItem="{Binding SelectedRowPart,UpdateSourceTrigger=PropertyChanged}"  SelectedValuePath="PART_NO" SelectedValue="{Binding DevelopmentReportModel.PartNo,UpdateSourceTrigger=PropertyChanged}" ColumnsHeader="{Binding DropDownItemsPart,UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding SelectChangeComboCommandPartNo,UpdateSourceTrigger=PropertyChanged}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Lookup:ComboBoxCus.InputBindings>
                        <KeyBinding Key="Enter"  Command="{Binding EnterPartNumberCmb}"  />
                    </Lookup:ComboBoxCus.InputBindings>
                </Lookup:ComboBoxCus>

                <!--<Control:ComboBoxCus  x:Name="ltbRunNo" Height="25" Grid.Row="0"  Grid.Column="3" ToolTip="Enter or Select Run No" />-->
                <Lookup:ComboBoxWithSearch Width="60" HorizontalAlignment="Left" MaxLength="5" IsReadOnly="{Binding IsReadOnlyRun,UpdateSourceTrigger=PropertyChanged}" IsEditable="False"  Grid.Row="0"  Grid.Column="3" Tag="Please select Run No." x:Name="cmbFeatureCode" ButtonVisibility="{Binding ButtonEnable}"
					DataSource="{Binding DevelopmentReportModel.RunNoDetails,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay ,NotifyOnValidationError=True, ValidatesOnDataErrors=True}" 
                                           SelectedItem="{Binding SelectedRowRunNo}"  
                                           SelectedValuePath="DEV_RUN_NO"
                                           DisplayValuePath="DEV_RUN_NO"
                                           SelectedValue="{Binding DevelopmentReportModel.RunNo,UpdateSourceTrigger=PropertyChanged}" 
                                           SelectedText="{Binding DevelopmentReportModel.RunNo,UpdateSourceTrigger=PropertyChanged}" 
                                           ColumnsHeader="{Binding DropDownItemsRun}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding SelectChangeComboCommandRunNo}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Lookup:ComboBoxWithSearch>

                <TextBlock x:Name="lblPartDescription" FontWeight="Bold"  Text="{Binding  DevelopmentReportModel.PartNoDesc,UpdateSourceTrigger=PropertyChanged}" Grid.Row="0"  Grid.Column="6" TextAlignment="Left"></TextBlock>
                <TextBlock Width="160" HorizontalAlignment="Left" x:Name="lblDevelopmentDetails"  Text="Development Details : " Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="4" TextAlignment="Left" Margin="2,0,0,0" FontSize="12" FontWeight="Bold"/>
                <TextBlock x:Name="lblRunDate"  Text="Run Date :" Grid.Row="1"  Grid.Column="4" TextAlignment="Right"></TextBlock>
                <!--<DatePicker x:Name="txtRunDate"   Grid.Row="1"  Grid.Column="6" TabIndex="2" />-->
                <Control:DatePickerCus Name ="txtRunDate"  Grid.Row="1" Tag="Please select Run Date"  Grid.Column="6" Margin="2,1,0,5" ToolTip="Enter Cust. Approved Date" HorizontalAlignment="Left"  SelectedDate="{Binding DevelopmentReportModel.RunDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="112"/>
            </Grid>
            <TabControl x:Name="DEV_Inter_Tab" Grid.Row="2" Margin="2">
                <TabItem Header="Design Assumptions" Width="150" >
                    <Grid Grid.Row="0">
                        <!--<Grid.ColumnDefinitions>
                            <ColumnDefinition Width="169*"/>
                            <ColumnDefinition Width="16*"/>
                            <ColumnDefinition Width="777*"/>
                        </Grid.ColumnDefinitions>-->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50*"></RowDefinition>
                            <RowDefinition Height="30*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <GroupBox Header="I.Design Assumptions:" Grid.Row="0">
                            <DataGrid RowHeaderWidth="25" x:Name="ssAssumtions" CanUserResizeRows ="False" PreviewKeyDown="ssAssumtions_PreviewKeyDown" Grid.Column="0" Grid.Row="0" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding DevelopmentReportModel.DesignAssumptionDetails,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" UICommon:ScrollToTopBehavior.ScrollToTop="True" >
                                <DataGrid.InputBindings>
                                    <KeyBinding  Key="Delete" Command="{Binding DeleteCommandAssumtions}" CommandParameter="{Binding ElementName=ssAssumtions, Path=SelectedItem}" />
                                </DataGrid.InputBindings>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="CurrentCellChanged">
                                        <i:InvokeCommandAction  Command="{Binding RowEditEndingDesignAssumptionCommand}" CommandParameter="{Binding ElementName=ssAssumtions, Path=SelectedItem}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="BeginningEdit">
                                        <si:CallMethodAction MethodName="OnBeginningEdit" TargetObject="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Part #" Visibility="Hidden"  Binding="{Binding PART_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                    <DataGridTextColumn Header="Runnig #" Visibility="Hidden"  Binding="{Binding DEV_RUN_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                    <DataGridTextColumn Header="S.No" Width="10*" Binding="{Binding SNO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="2"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Design Assumptions" Width="25*" Binding="{Binding CFT_DISS,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="200"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Justification for Assumption" Width="25*" Binding="{Binding JUSTIFICATION,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="200"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="TGR(Gone Right)" Width="10*" Binding="{Binding TGR,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="200"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="TGW(Gone Wrong)" Width="10*" Binding="{Binding TWG,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="200"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </GroupBox>
                        <GroupBox Header="II.Record of CFT Discussions:" Grid.ColumnSpan="3" Margin="0,211,0,0.329" Grid.RowSpan="2">
                            <TextBox x:Name="txtRecord" Grid.Column="0" Grid.Row="0" Height="56" HorizontalAlignment="Stretch" 
                                     TextAlignment="Justify" AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" 
                                     HorizontalScrollBarVisibility="Visible" VerticalContentAlignment="Top"  Text="{Binding  DevelopmentReportModel.RecordOfCFTDiscussion,UpdateSourceTrigger=PropertyChanged}" >
                            </TextBox>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="LOG" Width="150"  >
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="80*"></RowDefinition>
                            <RowDefinition Height="20*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <!--<DataGrid x:Name="ssDevReportvoid" ToolTip="Enter Development Log Details"></DataGrid>-->
                        <!--<Border Grid.Column="0" Grid.Row="0" BorderThickness="2">-->
                        <toolKit:DataGrid RowHeaderWidth="25" x:Name="ssDevReportLog" CanUserResizeRows ="False" PreviewKeyDown="ssDevReportLog_PreviewKeyDown" ToolTip="Enter Development Log Details"  Grid.Column="0" Grid.Row="0" AutoGenerateColumns="False" CanUserAddRows="False" ItemsSource="{Binding DevelopmentReportModel.LogDetails,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                            <toolKit:DataGrid.InputBindings>
                                <KeyBinding  Key="Delete" Command="{Binding DeleteCommandLog}" CommandParameter="{Binding ElementName=ssDevReportLog, Path=SelectedItem}" />
                            </toolKit:DataGrid.InputBindings>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="CurrentCellChanged">
                                    <i:InvokeCommandAction  Command="{Binding RowEditEndingLogCommand}" CommandParameter="{Binding ElementName=ssDevReportLog, Path=SelectedItem}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="BeginningEdit">
                                    <si:CallMethodAction MethodName="OnBeginningEditLog" TargetObject="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <toolKit:DataGrid.Columns>
                                <toolKit:DataGridTextColumn Header="Part #" Visibility="Hidden"  Binding="{Binding PART_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                <toolKit:DataGridTextColumn Header="Runnig #" Visibility="Hidden" Binding="{Binding DEV_RUN_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                <toolKit:DataGridTextColumn Header="Seq No" Width="6*" Binding="{Binding STAGE_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <toolKit:DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                    </toolKit:DataGridTextColumn.ElementStyle>
                                    <toolKit:DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <Setter Property="MaxLength" Value="2"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Control:TextBoxIntsOnly.Mask" Value="UnSignedDec"/>
                                        </Style>
                                    </toolKit:DataGridTextColumn.EditingElementStyle>
                                </toolKit:DataGridTextColumn>
                                <toolKit:DataGridTextColumn Header="Problem Faced" Width="24*" Binding="{Binding PROBLEM_FACED,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <toolKit:DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                    </toolKit:DataGridTextColumn.ElementStyle>
                                    <toolKit:DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <Setter Property="MaxLength" Value="2000"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </toolKit:DataGridTextColumn.EditingElementStyle>
                                </toolKit:DataGridTextColumn>
                                <toolKit:DataGridTextColumn Header="Counter Measure" Width="20*" Binding="{Binding COUNTER_MEASURE,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <toolKit:DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                    </toolKit:DataGridTextColumn.ElementStyle>
                                    <toolKit:DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <Setter Property="MaxLength" Value="2000"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </toolKit:DataGridTextColumn.EditingElementStyle>
                                </toolKit:DataGridTextColumn>
                                <bhCustCtrl:DataGridNumericColumn Header="Tool r/w due&#x0a; to design" Width="15*" Binding="{Binding REWORK_TOOL_DESIGN, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}" MaxPrecision="2" MaxScale="0" ></bhCustCtrl:DataGridNumericColumn>
                                <!--<DataGridTextColumn Header="Tool r/w due&#x0a; to design"  Width="15*" Binding="{Binding REWORK_TOOL_DESIGN,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="2"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                <Setter Property="Control:TextBoxIntsOnly.Mask" Value="UnSignedDec"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>-->
                                <bhCustCtrl:DataGridNumericColumn Header="r/w due to&#x0a;tool mfg" Width="15*" Binding="{Binding REWORK_TOOL_MFG, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}" MaxPrecision="2" MaxScale="0" ></bhCustCtrl:DataGridNumericColumn>
                                <!--<toolKit:DataGridTextColumn Header="r/w due to&#x0a;tool mfg"  Width="15*" Binding="{Binding REWORK_TOOL_MFG,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <toolKit:DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </toolKit:DataGridTextColumn.ElementStyle>
                                        <toolKit:DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="2"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                <Setter Property="Control:TextBoxIntsOnly.Mask" Value="UnSignedDec"/>
                                            </Style>
                                        </toolKit:DataGridTextColumn.EditingElementStyle>
                                    </toolKit:DataGridTextColumn>-->
                                <toolKit:DataGridTextColumn Header="Remarks"  Width="20*" Binding="{Binding REMARKS,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <toolKit:DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                    </toolKit:DataGridTextColumn.ElementStyle>
                                    <toolKit:DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <Setter Property="MaxLength" Value="2000"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </toolKit:DataGridTextColumn.EditingElementStyle>
                                </toolKit:DataGridTextColumn>
                            </toolKit:DataGrid.Columns>
                        </toolKit:DataGrid>
                        <!--</Border>-->
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20*"></RowDefinition>
                                <RowDefinition Height="20*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15*" ></ColumnDefinition>
                                <ColumnDefinition Width="13*"  ></ColumnDefinition>
                                <ColumnDefinition Width="15*" ></ColumnDefinition>
                                <ColumnDefinition Width="25*" ></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="lblNoofforgoing0" Grid.Row="0"  Grid.Column="0" TextAlignment="Right" VerticalAlignment="Center" Text="Number of forging shifts for the run : " Margin="2,5,0,0"/>
                            <TextBlock x:Name="lblDesignTools"  Text="Tool r/w due to Design Total  : " Grid.Row="0"  Grid.Column="2" TextAlignment="Right"  ></TextBlock>
                            <TextBlock x:Name="lblMsgTotal"  Text="Tool r/w due to mfg Total  : " Grid.Row="1"  Grid.Column="2" TextAlignment="Right" ></TextBlock>
                            <TextBox Tag="Please enter Number of forging shifts for the run" Grid.Column="1" Grid.Row="0" Width="29" Control:TextBoxIntsOnly.Mask="UnSignedInt" VerticalAlignment="Center" Margin="2,5,0,0"  HorizontalAlignment="Left" MaxLength="2" Text="{Binding  DevelopmentReportModel.NoOfForginShift,UpdateSourceTrigger=PropertyChanged}"  ></TextBox>
                            <TextBlock x:Name="lblDesignToolsValue"   Grid.Row="0"  Grid.Column="3" TextAlignment="Left"  Text="{Binding  DevelopmentReportModel.ToolRWDesignTotal,UpdateSourceTrigger=PropertyChanged}"  ></TextBlock>
                            <TextBlock x:Name="lblMsgTotalValue"  Grid.Row="1"  Grid.Column="3" TextAlignment="Left"  Text="{Binding  DevelopmentReportModel.ToolRWMfgTotal,UpdateSourceTrigger=PropertyChanged}" ></TextBlock>
                        </Grid>

                    </Grid>
                </TabItem>
                <TabItem Header="Short Closure report" Width="150"  >
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50*"></RowDefinition>

                        </Grid.RowDefinitions>
                        <GroupBox Header="IV.Short closure report: (TGW to be updated )" Grid.Row="0" >
                            <!--<DataGrid x:Name="ssShortClosure" Grid.Column="0" Grid.Row="0" ToolTip="Enter Short Closure Details"  TabIndex="10"></DataGrid>-->
                            <DataGrid RowHeaderWidth="25" CanUserResizeRows ="False" PreviewKeyDown="ssShortClosure_PreviewKeyDown"  x:Name="ssShortClosure" ToolTip="Enter Short Closure Details"  Grid.Column="0" Grid.Row="0"   AutoGenerateColumns="False" CanUserAddRows="False" ItemsSource="{Binding DevelopmentReportModel.ShortClosureDetails,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                <DataGrid.InputBindings>
                                    <KeyBinding  Key="Delete" Command="{Binding DeleteCommandShortClosure}" CommandParameter="{Binding ElementName=ssShortClosure, Path=SelectedItem}" />
                                </DataGrid.InputBindings>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="CurrentCellChanged">
                                        <i:InvokeCommandAction  Command="{Binding RowEditEndingShortClosureCommand}" CommandParameter="{Binding ElementName=ssShortClosure, Path=SelectedItem}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="CellEditEnding">
                                        <si:CallMethodAction MethodName="OnCellEditEndingLogIssue" TargetObject="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Part #" Visibility="Hidden"  Binding="{Binding PART_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                    <DataGridTextColumn Header="Runnig #" Visibility="Hidden"  Binding="{Binding RUN_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                    <DataGridTextColumn Header="Reason"    Width="15*"  Binding="{Binding REASON,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="100"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Why" Width="15*"  Binding="{Binding WHY,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="100"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Proposed Short&#x0a; Term Action"  Width="15*"  Binding="{Binding SHORT_ACTION,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="100"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTemplateColumn Header="Action Due&#x0a; Date"  Width="10*" SortMemberPath="SHORT_ACTION_DATE">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding SHORT_ACTION_DATE,Converter={StaticResource DateTimeConverter}, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate>
                                                <uc:DatePickerCus  Name ="txtShortActionDate" ToolTip="Select Date"                                     
                                     SelectedDate="{Binding SHORT_ACTION_DATE, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                </uc:DatePickerCus>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Header="Proposed Long&#x0a; Term Action"  Width="20*"  Binding="{Binding LONG_ACTION,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="100"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTemplateColumn Header="Action Due&#x0a; Date"  Width="10*" SortMemberPath="LONG_ACTION_DATE">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding LONG_ACTION_DATE,Converter={StaticResource DateTimeConverter}, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate>
                                                <uc:DatePickerCus  Name ="txtLongActionDate" ToolTip="Select Date"                                     
                                     SelectedDate="{Binding LONG_ACTION_DATE, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                </uc:DatePickerCus>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Trial Date"  Width="10*" SortMemberPath="TRIAL_DATE">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding TRIAL_DATE,Converter={StaticResource DateTimeConverter}, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate>
                                                <uc:DatePickerCus  Name ="txtTrialDate" ToolTip="Select Date"                                     
                                     SelectedDate="{Binding TRIAL_DATE, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                </uc:DatePickerCus>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </GroupBox>

                    </Grid>
                </TabItem>
            </TabControl>
            <Grid Grid.Row="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="15*"></RowDefinition>
                    <RowDefinition Height="20*"></RowDefinition>
                    <RowDefinition Height="25*"></RowDefinition>
                    <RowDefinition Height="25*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="15*" ></ColumnDefinition>
                    <ColumnDefinition Width="9*" ></ColumnDefinition>
                    <ColumnDefinition Width="0.5*" ></ColumnDefinition>
                    <ColumnDefinition Width="15*" ></ColumnDefinition>
                    <ColumnDefinition Width="16*" ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="lblDDRep"   VerticalAlignment="Top" Margin="0,7,0,0"  Text="D&amp;D Rep. : " Grid.Row="2"  Grid.Column="0" TextAlignment="Right"></TextBlock>
                <TextBlock x:Name="lblZAPRep" VerticalAlignment="Top" Margin="0,7,0,0"  Text="ZAP Rep. : " Grid.Row="3"  Grid.Column="0" TextAlignment="Right"></TextBlock>
                <TextBlock x:Name="lblComplaints" TextAlignment="Right" Text="Do you have customer complaints?  " Grid.Row="0"  Grid.Column="3"></TextBlock>
                <TextBlock x:Name="lblNatureofComplaint" Text="Nature of Complaint" Grid.Row="1"  Grid.Column="3" TextAlignment="Left" VerticalAlignment="Bottom"></TextBlock>
                <TextBox  x:Name="txtDndRep"  VerticalAlignment="Top"  Grid.Row="2" Tag="Please enter D&amp;D representative" MaxLength="20"  Grid.Column="1" ToolTip="Enter D&amp;D Representative" Margin="2,2,0,2"  Text="{Binding DevelopmentReportModel.DADRep,UpdateSourceTrigger=PropertyChanged}" Width="152" HorizontalAlignment="Left">
                    <!--<i:Interaction.Behaviors >,
                        <onTabBehavior:TabOnEnterTextBoxBehavior />
                    </i:Interaction.Behaviors>-->
                </TextBox>
                <TextBox  x:Name="txtZapRep" Tag="Please enter ZAP Representative" Width="152" HorizontalAlignment="Left"  VerticalAlignment="Top" Grid.Row="3" MaxLength="20" Grid.Column="1" ToolTip="Enter ZAP Representative" Margin="2"  Text="{Binding DevelopmentReportModel.ZapRep,UpdateSourceTrigger=PropertyChanged}" >
                    <!--<i:Interaction.Behaviors >
                        <onTabBehavior:TabOnEnterTextBoxBehavior />
                    </i:Interaction.Behaviors>-->
                </TextBox>
                <CheckBox x:Name="chkComplaint" Grid.Column="4" Grid.Row="0" Content="{Binding  DevelopmentReportModel.LabelNatureOfComplaint,UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding DevelopmentReportModel.IsDoYouHaveCustComplaint,UpdateSourceTrigger=PropertyChanged}" Command="{Binding OnAvailChkCommand}" >
                    <!--<i:Interaction.Behaviors >
                        <onTabBehavior:TabOnEnterCheckBoxBehavior />
                    </i:Interaction.Behaviors>-->
                </CheckBox>
                <TextBox  x:Name="txtCustComplaint" VerticalAlignment="Top"  Height="55" Grid.Row="2"  Grid.Column="3" Grid.ColumnSpan="3" Grid.RowSpan="2" Tag="Please enter Nature of Complaint" HorizontalAlignment="Stretch" TextAlignment="Justify" 
                          AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"
                          Margin="2" MaxLength="2000" VerticalContentAlignment="Top" Text="{Binding  DevelopmentReportModel.NatureOfComplaint,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsReadonlyComp,UpdateSourceTrigger=PropertyChanged}"
                          ></TextBox>

            </Grid>
            <!--TextBox and Lables-->
            <!--1 Set-->

        </Grid>
    </Border>

    <UserControl.InputBindings >
        <KeyBinding Key="F3" Command ="{Binding OnAddCommand}"/>
        <KeyBinding Key="F5"  Command="{Binding OnEditViewCommand}"/>
        <KeyBinding Key="S" Modifiers="Control"  Command="{Binding OnSaveCommand}"/>
        <KeyBinding Key="F8"  Command="{Binding OnPrintCommand}"/>
        <KeyBinding Key="F9"  Command="{Binding OnCloseCommand}"/>
    </UserControl.InputBindings >
</UserControl>
