<UserControl x:Class="ProcessDesigner.frmFeatureMaster"
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:bhCustCtrl="clr-namespace:BHCustCtrl;assembly=BHCustCtrl"
        xmlns:Lookup="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls"
        xmlns:Enterkey="clr-namespace:ProcessDesigner.Common"
               xmlns:Control="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls" 
               xmlns:toolKit="http://schemas.microsoft.com/wpf/2008/toolkit"
             xmlns:UICommon="clr-namespace:ProcessDesigner.UICommon"
        xmlns:vm="clr-namespace:ProcessDesigner.Model" 
                xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:local="clr-namespace:ProcessDesigner.UICommon" Height="400" Width="800" Loaded="UserControl_Loaded" Background="{StaticResource WindowBackground}">
    <Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" >
                <ToolBar >
                    <Button Content="Add F3"  IsEnabled="{Binding AddButtonIsEnable,UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" Height="40"  Grid.Row="0" Grid.Column="0" Width="70" Command="{Binding OnAddCommand}" RenderTransformOrigin="-0.3,-1"  ToolTip="Add New Record" Lookup:AddedProperty.Image="Images/Add.png"></Button>
                    <Button Content="Edit/View F5" Grid.Row="0" Grid.Column="1" Width="80" Height="40" KeyboardNavigation.IsTabStop="False"  IsEnabled="{Binding EditButtonIsEnable,UpdateSourceTrigger=PropertyChanged}" Command="{Binding OnEditViewCommand }"  ToolTip="Edit or View Record" Lookup:AddedProperty.Image="Images/Edit.png"></Button>
                    <Button Content="Save Ctrl+S" Grid.Row="0" Grid.Column="2"  IsEnabled="{Binding SaveButtonIsEnable,UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False"  Width="70"  Height="40" Command="{Binding OnSaveCommand}" CommandParameter="{Binding ElementName=dgvCharacteristicsMast, Path=ItemsSource}"  ToolTip="Save Record" Lookup:AddedProperty.Image="Images/Save.png" />
                    <Button Content="Close F9" Grid.Row="0" Grid.Column="5" Width="60"  Height="40" Command="{Binding OnCloseCommand}" KeyboardNavigation.IsTabStop="False"  ToolTip="Close Form" Lookup:AddedProperty.Image="Images/Close.png"></Button>
                </ToolBar>
            </Grid>

            <Grid Grid.Row="1" KeyboardNavigation.TabNavigation="Cycle">
                <Grid.RowDefinitions>
                    <RowDefinition Height="65"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Grid.Column="0" BorderThickness="1" Margin="5,5,5,5" >

                    <Grid Grid.Row="1" Margin="2,2,2,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20*"></ColumnDefinition>
                            <ColumnDefinition Width="30*"></ColumnDefinition>
                            <ColumnDefinition Width="17*"></ColumnDefinition>
                            <ColumnDefinition Width="33*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Operation Code : " Grid.Column="0" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="0" ></TextBlock>
                        <Lookup:ComboBoxCus DropDownCusWidth="350" Tag="Please select Operation Code" Width="100" HorizontalAlignment="Left" Grid.Column="1" Grid.Row ="0" IsReadOnly="True"  x:Name="cmbOperationCode" Mask="UnSignedInt" ButtonVisibility="{Binding ButtonVisibleOper}"
					DataSource="{Binding FeatureMaster.OperationCodeDetails,UpdateSourceTrigger=PropertyChanged ,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"  SelectedItem="{Binding FeatureMaster.SelectedRow}"  SelectedValuePath="OPER_CODE"   SelectedValue="{Binding FeatureMaster.OperationCode,UpdateSourceTrigger=PropertyChanged}" ColumnsHeader="{Binding DropDownItems}"  >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectChangeComboCommandOper}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Lookup:ComboBoxCus>
                        <!--<ComboBox Grid.Column="1" Grid.Row="0"></ComboBox>-->
                        <TextBlock Text="Operation : " Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Right"  ></TextBlock>
                        <TextBox Name="txtOperDesc" IsReadOnly="True"  Margin="0,0,15,0" Text="{Binding FeatureMaster.Operations,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Grid.Column="4" Grid.Row="0"  ></TextBox>

                        <TextBlock Text="Feature Code : " Grid.Column="0" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="1" ></TextBlock>
                        <Lookup:ComboBoxWithSearch DropDownWidth="200" Width="70" Tag="Please select/verify Feature Code"  MaxLength="5"  IsReadOnly="True" Grid.Column="1" Grid.Row ="1" x:Name="cmbFeatureCode" ButtonVisibility="{Binding ButtonEnable}"
					DataSource="{Binding FeatureMaster.FeatureCodeDetails,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay ,NotifyOnValidationError=True, ValidatesOnDataErrors=True}" 
                                                   SelectedItem="{Binding FeatureMaster.SelectedRowFeat,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                   SelectedText="{Binding FeatureMaster.FeatureCode,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                   SelectedValuePath="FEATURE_CODE" 
                                                   DisplayValuePath="FEATURE_DESC"  
                                                   SelectedValue="{Binding FeatureMaster.FeatureCode,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                   ColumnsHeader="{Binding DropDownItemsFeature ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                   VerticalContentAlignment="Center" HorizontalAlignment="Left">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectChangeComboCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Lookup:ComboBoxWithSearch>
                        <!--<ComboBox Grid.Column="1" Grid.Row="1"></ComboBox>-->
                        <TextBlock Text="Feature : " Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right"  ></TextBlock>
                        <TextBox MaxLength="49" Tag="Please enter Feature"  local:FocusExtension.IsFocused="{Binding FocusButton}" Name="txtFeature" Margin="0,0,15,0" Grid.Column="3" IsReadOnly="False" Text="{Binding FeatureMaster.Feature,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay ,NotifyOnValidationError=True, ValidatesOnDataErrors=True}"   Grid.Row="1" ></TextBox>
                    </Grid>
                </Border>
                <Border Grid.Row="1" Margin="5,5,5,5">
                    <GroupBox Grid.Row="2" Header="Characteristic Details : " >
                        <Grid Grid.Row="2">
                            <TextBlock Text="Characteristic Details : " Grid.Column="0" VerticalAlignment="Center"  HorizontalAlignment="Left" Grid.Row="0" ></TextBlock>
                            <DataGrid CanUserDeleteRows="False" RowHeaderWidth="20" SelectionUnit="FullRow" Margin="0,2,2,0" AutoGenerateColumns="False" CanUserAddRows="False"  SelectedItem="{Binding CharacterSelectedItem,UpdateSourceTrigger=PropertyChanged}"  Name="dgvCharacteristicsMast" Grid.Column="0" Grid.Row="1" ItemsSource="{Binding FeatureMaster.CharacteristicsMasterDetails,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" UICommon:ScrollToTopBehavior.ScrollToTop="True" >
                                <DataGrid.InputBindings>
                                    <KeyBinding  Key="Delete" Command="{Binding DeleteCommandChar}" CommandParameter="{Binding ElementName=dgvCharacteristicsMast}"  />
                                </DataGrid.InputBindings>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Command="{Binding DeleteClickCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}" />
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="6.5*" IsReadOnly="True" Header="Sno"  Binding="{Binding SNO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                    <DataGridTextColumn Width="20*"  Header="Measuring Technique" Binding="{Binding MEASURING_TECHNIQUE,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="30"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="15*" Header="Sample Size" Binding="{Binding SAMPLE_SIZE,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  >
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="2"/>
                                                <Setter Property="Control:TextBoxIntsOnly.Mask" Value="UnSignedInt"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="16.5*"  Header="Sample Frequency" Binding="{Binding SAMPLE_FREQUENCY,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="15"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="20*"  Header="Control Method" Binding="{Binding CONTROL_METHOD,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="25"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="20*"  Header="Reaction Plan" Binding="{Binding REACTION_PLAN,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="MaxLength" Value="25"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <i:Interaction.Triggers>
                                    <!--<i:EventTrigger EventName="BeginningEdit">
                                    <i:InvokeCommandAction Command="{Binding GridRowEndEditing}" CommandParameter="{Binding ElementName=dgvCharacteristicsMast, Path=SelectedItem}"/>
                                </i:EventTrigger>-->
                                    <i:EventTrigger EventName="RowEditEnding">
                                        <i:InvokeCommandAction Command="{Binding GridRowEndEditing }" CommandParameter="{Binding ElementName=dgvCharacteristicsMast, Path=SelectedItem}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="AddingNewItem">
                                        <i:InvokeCommandAction Command="{Binding GridAddingNewItem}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </DataGrid>
                        </Grid>
                    </GroupBox>
                </Border>
            </Grid>
        </Grid>
    </Border>
    <UserControl.InputBindings >
        <KeyBinding Key="F3"  Command ="{Binding OnAddCommand}"/>
        <KeyBinding Key="F5"  Command="{Binding OnEditViewCommand}"/>
        <KeyBinding Key="S" Modifiers="Control"  Command="{Binding OnSaveCommand}"/>
        <!--<KeyBinding Key="F7"  Command="{Binding OnSaveCommand}"/>-->
        <KeyBinding Key="F9"  Command="{Binding OnCloseCommand}"/>
    </UserControl.InputBindings >
</UserControl>
