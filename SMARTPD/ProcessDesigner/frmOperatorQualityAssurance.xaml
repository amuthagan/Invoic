<UserControl x:Class="ProcessDesigner.frmOperatorQualityAssurance"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Common="clr-namespace:ProcessDesigner.UICommon"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions" 
        xmlns:il="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions"       
        xmlns:si="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
        xmlns:Control="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls" 
             xmlns:UICommon="clr-namespace:ProcessDesigner.UICommon"
        Height="600" Width="860" Background="{StaticResource WindowBackground}" >
    <UserControl.InputBindings>
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveClickCommand}"/>
        <KeyBinding Key="F8"  Command="{Binding PrintClickCommand}"/>
    </UserControl.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="10"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"></RowDefinition>
            <RowDefinition Height="65"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="35*"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="12*"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="5*"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
        </Grid.RowDefinitions>
        <Border BorderThickness="2" Grid.Column="1" Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="5*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="11*"></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="5*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="11*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="11*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="5*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="15"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="10*"></RowDefinition>
                    <RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="10*"></RowDefinition>
                    <RowDefinition Height="1"></RowDefinition>
                    <!--<RowDefinition Height="10*"></RowDefinition>
                    <RowDefinition Height="1"></RowDefinition>-->
                    <!--<RowDefinition Height="10*"></RowDefinition>-->
                </Grid.RowDefinitions>
                <TextBlock Text="Part No. :" Name ="lblPartNo" TextAlignment="Right"  Grid.Row="1" Grid.Column="1"></TextBlock>               
                <Control:ComboBoxWithSearch x:Name="ltbPartNo" Tag="Please enter/select Part No."  HorizontalAlignment="Left" IsReadOnly="False" Common:FocusExtension.IsFocused="{Binding PartNumberIsFocused,UpdateSourceTrigger=PropertyChanged}"
                                     Grid.Row="1"  Grid.Column="3" MinWidth="110" MaxLength="9"
                                     SelectedValuePath="PART_NO" DisplayValuePath="PART_NO" 
                                     SelectedValue="{Binding MandatoryFields.PART_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     DataSource="{Binding PartNumberDataSource}"
                                     SelectedText="{Binding MandatoryFields.PART_NO, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     ButtonVisibility="{Binding PartNumberHasDropDownVisibility}" 
                                     ColumnsHeader="{Binding PartNumberDropDownItems}"
                                     >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding PartNumberSelectedItemChangedCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding PartNumberEndEditCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Control:ComboBoxWithSearch.InputBindings>
                        <KeyBinding  Key="Enter" Command="{Binding PartNumberEndEditCommand}"  />
                    </Control:ComboBoxWithSearch.InputBindings>
                </Control:ComboBoxWithSearch>
                <TextBlock Text="Sequence:" Name ="lblSequence" TextAlignment="Right"  Grid.Row="1" Grid.Column="5"></TextBlock>
                <Control:ComboBoxWithSearch  x:Name="ltbSEQUENCE_NO" Tag="Please enter/select Sequence No."  HorizontalAlignment="Left" IsReadOnly="False" Common:FocusExtension.IsFocused="{Binding SeqNumberIsFocused,UpdateSourceTrigger=PropertyChanged}"
                                     Grid.Row="1"  Grid.Column="7" Width="110" MaxLength="9"
                                      SelectedValuePath="SEQ_NO" DisplayValuePath="SEQ_NO"
                                     SelectedValue="{Binding MandatoryFields.SEQ_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     DataSource="{Binding SequenceDataSource}" SelectedItem="{Binding SNoSelectedItem,UpdateSourceTrigger=PropertyChanged}"
                                     SelectedText="{Binding MandatoryFields.SEQ_NO, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     ButtonVisibility="{Binding SequenceHasDropDownVisibility}" 
                                     ColumnsHeader="{Binding SequenceDropDownItems}"
                                     >
                    <i:Interaction.Triggers>                       
                        <i:EventTrigger EventName="SelectedItemChanging">
                            <i:InvokeCommandAction Command="{Binding SequenceSelectedItemChangedCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding SequenceEndEditCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Control:ComboBoxWithSearch.InputBindings>
                        <KeyBinding  Key="Enter" Command="{Binding SequenceSelectedItemChangedCommand}"  />
                    </Control:ComboBoxWithSearch.InputBindings>
                </Control:ComboBoxWithSearch>
                <TextBlock Text="Cost Centre Code :" Name ="lblCostCentre" TextAlignment="Right"  Grid.Row="1" Grid.Column="9"></TextBlock>
                <Control:ComboBoxWithSearch x:Name="ltbCOST_CENT_CODE" Tag="Please enter/select Cost Centre Code"  HorizontalAlignment="Left" IsReadOnly="False" Common:FocusExtension.IsFocused="{Binding CCCodeIsFocused,UpdateSourceTrigger=PropertyChanged}"
                                     Grid.Row="1"  Grid.Column="11" Width="110" MaxLength="9"
                                      SelectedValuePath="CC_CODE" DisplayValuePath="CC_CODE"
                                     SelectedValue="{Binding MandatoryFields.CC_CODE,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     DataSource="{Binding CostCentreDataSource}"
                                     SelectedText="{Binding MandatoryFields.CC_CODE, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     ButtonVisibility="{Binding CostCentreHasDropDownVisibility}" 
                                     ColumnsHeader="{Binding CostCentreDropDownItems}"
                                     >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding CostCentreSelectedItemChangedCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding CostCentreEndEditCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Control:ComboBoxWithSearch.InputBindings>
                        <KeyBinding  Key="Enter" Command="{Binding CostCentreSelectedItemChangedCommand}"  />
                    </Control:ComboBoxWithSearch.InputBindings>
                </Control:ComboBoxWithSearch>
                <TextBlock Text="Wire Dia :" Name ="lblWireDia" TextAlignment="Right"  Grid.Row="1" Grid.Column="13"></TextBlock>
                <Control:ComboBoxWithSearch x:Name="ltbWIRE_DIA" Tag="Please enter/select Wire Dia" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadonly,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Common:FocusExtension.IsFocused="{Binding WireDiaIsFocused,UpdateSourceTrigger=PropertyChanged}"
                                     Grid.Row="1"  Grid.Column="15" Width="110" MaxLength="9"
                                      SelectedValuePath="TS_ISSUE_ALTER" DisplayValuePath="TS_ISSUE_ALTER"
                                     SelectedValue="{Binding MandatoryFields.TS_ISSUE_ALTER,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     DataSource="{Binding WireDiaDataSource}"
                                     SelectedText="{Binding MandatoryFields.TS_ISSUE_ALTER, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     ButtonVisibility="{Binding WireDiaHasDropDownVisibility}" 
                                     ColumnsHeader="{Binding WireDiaDropDownItems}"
                                     >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding WireDiaSelectedItemChangedCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding WireDiaEndEditCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Control:ComboBoxWithSearch.InputBindings>
                        <KeyBinding  Key="Enter" Command="{Binding WireDiaSelectedItemChangedCommand}"  />
                    </Control:ComboBoxWithSearch.InputBindings>
                </Control:ComboBoxWithSearch>

                <TextBlock Text="Date :" Name ="lblDate" TextAlignment="Right"  Grid.Row="3" Grid.Column="1"></TextBlock>
                <Control:DatePickerCus Name ="dtpDateRecd" Grid.Row="3" Grid.Column="3" Width="112" Tag="Please select Date" HorizontalAlignment="Left"  SelectedDate="{Binding MandatoryFields.TODAY_DATE, UpdateSourceTrigger=PropertyChanged}"  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedDateChanged">
                            <i:InvokeCommandAction Command="{Binding EnquiryReceivedOnChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Control:DatePickerCus>
                <TextBlock Text="Shift :" Name ="lblShift" TextAlignment="Right"  Grid.Row="3" Grid.Column="5"></TextBlock>
                <Control:ComboBoxWithSearch x:Name="ltbSHIFT_NO" Tag="Please enter/select Shift" HorizontalAlignment="Left" IsReadOnly="False"
                                     Grid.Row="3"  Grid.Column="7" Width="110" MaxLength="9"
                                      SelectedValuePath="SHIFT_NO" DisplayValuePath="SHIFT_NO"
                                     SelectedValue="{Binding MandatoryFields.SHIFT_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     DataSource="{Binding ShiftDataSource}"
                                     SelectedText="{Binding MandatoryFields.SHIFT_NO, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     ButtonVisibility="{Binding ShiftHasDropDownVisibility}" 
                                     ColumnsHeader="{Binding ShiftDropDownItems}"
                                     >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding ShiftSelectedItemChangedCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding ShiftEndEditCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Control:ComboBoxWithSearch.InputBindings>
                        <KeyBinding  Key="Enter" Command="{Binding ShiftSelectedItemChangedCommand}"  />
                    </Control:ComboBoxWithSearch.InputBindings>
                </Control:ComboBoxWithSearch>
                
                <!--<TextBlock Text="Work Order Number :" Name ="lblWorkOrderNo" TextAlignment="Right"  Grid.Row="3" Grid.Column="9"></TextBlock>
                <Control:ComboBoxWithSearch x:Name="ltbWORK_ORDER_NO" Tag="Please enter/select Work Order Number" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadonly,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                     Grid.Row="3"  Grid.Column="11" Width="110" MaxLength="8"
                                      SelectedValuePath="WORK_ORDER_NO" DisplayValuePath="WORK_ORDER_NO"
                                     SelectedValue="{Binding MandatoryFields.WORK_ORDER_NO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     DataSource="{Binding WorkOrderDataSource}"
                                     SelectedText="{Binding MandatoryFields.WORK_ORDER_NO, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     ButtonVisibility="{Binding WorkOrderHasDropDownVisibility}" 
                                     ColumnsHeader="{Binding WorkOrderDropDownItems}"
                                     >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding WorkOrderSelectedItemChangedCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding WorkOrderEndEditCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Control:ComboBoxWithSearch.InputBindings>
                        <KeyBinding  Key="Enter" Command="{Binding WorkOrderSelectedItemChangedCommand}"  />
                    </Control:ComboBoxWithSearch.InputBindings>
                </Control:ComboBoxWithSearch>

                <TextBlock Text="Quantity :" Name ="lblQuantity" TextAlignment="Right"  Grid.Row="3" Grid.Column="13"></TextBlock>
                <Control:DecimalTextBox IsFormatRequired="False" x:Name="txtOff" Grid.Column="15" Grid.Row="3" Tag="Please enter Quantity" Height="20" Margin="0,3,0,0"
                         Width="107" MaxLength="10" MaxDecimalPlaces="0" IsReadOnly="{Binding MandatoryFields.IS_READ_ONLY_QUANTITY,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay }"
                         IsEnabled="{Binding MandatoryFields.IS_SAVE_ENABLED,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay }" HorizontalAlignment="Left"
                         Text="{Binding MandatoryFields.QUANTITY,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay }" TextAlignment="Left">
                </Control:DecimalTextBox>-->

                <TextBlock FontWeight="Bold" Text="CCF :" Name ="lblCCF" TextAlignment="Right"  Grid.Row="3" Grid.Column="9" ></TextBlock>
                <TextBox x:Name="txtCCF" Grid.Column="11"  Grid.Row="3" Grid.ColumnSpan="5" Tag="Please enter CCF" 
                          Width="290" HorizontalAlignment="Left"
                         Text="{Binding MandatoryFields.CCF, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                </TextBox>
                <TextBlock FontWeight="Bold" Text="Next Operation :" Name ="lblNextOpration" TextAlignment="Right"  Grid.Row="7" Grid.Column="9" Visibility="Hidden" ></TextBlock>
                <TextBox x:Name="txtNEXT_OPERATION" Grid.Column="11"  Grid.Row="7" Grid.ColumnSpan="5" 
                         Tag="Please enter Next Operation" AcceptsReturn="False" AcceptsTab="False" Visibility="Hidden"
                         Text="{Binding MandatoryFields.NEXT_OPERATION }">
                </TextBox>

            </Grid>
        </Border>
        <Border BorderThickness="2" Grid.Column="1" Grid.Row="3" >
            <DataGrid IsTabStop="False"  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6" Name="DataGridResult" ItemsSource="{Binding MandatoryFields.GridData,UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserAddRows="False"
                      CanUserDeleteRows="False" RowHeaderWidth="20" CanUserResizeRows="False" SelectionUnit="FullRow" SelectionMode="Single" SelectionChanged="DataGridResult_SelectionChanged"  UICommon:ScrollToTopBehavior.ScrollToTop="True"

 >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="S.No." Width="57" Binding="{Binding SNO,UpdateSourceTrigger=PropertyChanged}"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn IsReadOnly="True"  Header="INSPECT FOR" Width="150" Binding="{Binding FEATURE,UpdateSourceTrigger=PropertyChanged}"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn IsReadOnly="True"  Header="*" Width="37" Binding="{Binding SPEC_CHAR,UpdateSourceTrigger=PropertyChanged}"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn IsReadOnly="True"  Header="SPECIFICATION MIN" Width="1*" Binding="{Binding CTRL_SPEC_MIN,UpdateSourceTrigger=PropertyChanged}"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn IsReadOnly="True"  Header="SPECIFICATION MAX" Width="1*" Binding="{Binding CTRL_SPEC_MAX,UpdateSourceTrigger=PropertyChanged}"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn IsReadOnly="True"  Header="MEASURING TECH" Width="1*" Binding="{Binding GAUGES_USED,UpdateSourceTrigger=PropertyChanged}"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn IsReadOnly="True"  Header="FREQ" Width="70" Binding="{Binding FREQ_OF_INSP,UpdateSourceTrigger=PropertyChanged}"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn IsReadOnly="True"  Header="SAMPLE SIZE" Width="80" Binding="{Binding SAMPLE_SIZE,UpdateSourceTrigger=PropertyChanged}"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="BeginningEdit">
                    <si:CallMethodAction MethodName="OnBeginningEditOQA" TargetObject="{Binding}"/>
                    </i:EventTrigger>
                <i:EventTrigger EventName="CellEditEnding">
                    <si:CallMethodAction MethodName="OnCellEditEndingOQA" TargetObject="{Binding}"/>
                </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>
        </Border>
        <Border BorderThickness="2" Grid.Column="1" Grid.Row="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="6*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="11*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="11*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="11*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="5*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                    <ColumnDefinition Width="11*"></ColumnDefinition>
                    <ColumnDefinition Width="1"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="10*"></RowDefinition>
                    <RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="10*"></RowDefinition>
                    <RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="10*"></RowDefinition>
                    <RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="10*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock FontWeight="Bold" FontSize="10" Text="* Characteristics C - Critical , M - Major, K - Key" TextAlignment="Left"  Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"></TextBlock>
                <TextBlock Text="Part Description :" TextAlignment="Right"  Grid.Row="3" Grid.Column="1"></TextBlock>
                <TextBox IsTabStop="False" IsReadOnly="True"  x:Name="txtPartDesc" Grid.Column="3"  Grid.Row="3"  
                         Text="{Binding MandatoryFields.PART_DESC ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="60" >
                </TextBox>
                <TextBlock Text="Raw Material :" TextAlignment="Right"  Grid.Row="5" Grid.Column="1"></TextBlock>
                <TextBox IsTabStop="False" IsReadOnly="True" x:Name="txtRawMaterial" Grid.Column="3"  Grid.Row="5" 
                         Text="{Binding MandatoryFields.RAW_MATERIAL ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="60" >
                </TextBox>
                <TextBlock Text="Machine Name :" TextAlignment="Right"  Grid.Row="7" Grid.Column="1"></TextBlock>
                <TextBox IsTabStop="False" IsReadOnly="True" x:Name="txtMachineName" Grid.Column="3"  Grid.Row="7"  
                         Text="{Binding MandatoryFields.MACHINE_NAME ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="60" >
                </TextBox>
                <TextBlock Text="Operation Code :" TextAlignment="Right"  Grid.Row="1" Grid.Column="5"></TextBlock>
                <TextBox IsTabStop="False" IsReadOnly="True" x:Name="txtOperationCode" Grid.Column="7"  Grid.Row="1"  
                         Text="{Binding MandatoryFields.OPERATION_CODE ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="60" >
                </TextBox>
                <TextBlock Text="Operation Description :" TextAlignment="Right"  Grid.Row="3" Grid.Column="5"></TextBlock>
                <TextBox IsTabStop="False" IsReadOnly="True" x:Name="txtOperationDescription" Grid.Column="7"  Grid.Row="3" Grid.ColumnSpan="5"  
                         Text="{Binding MandatoryFields.OPERATION_DESC ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="60" >
                </TextBox>
                <TextBlock Text="Next Operation Description :" TextAlignment="Right"  Grid.Row="5" Grid.Column="5"></TextBlock>
                <TextBox IsTabStop="False" IsReadOnly="True" x:Name="NextOperationDescription" Grid.Column="7"  Grid.Row="5" Grid.ColumnSpan="5"  
                         Text="{Binding MandatoryFields.NEXT_OPERATION_DESC ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="60" >
                </TextBox>

                <TextBlock Text="Sequence Drawing Issue No. :" TextAlignment="Right"  Grid.Row="7" Grid.Column="5"></TextBlock>
                <TextBox IsTabStop="False" IsReadOnly="True" x:Name="txtSequenceDrawingIssueNo" Grid.Column="7"  Grid.Row="7"  
                         Text="{Binding MandatoryFields.SEQUENCE_DRAWING_ISSUE_NO ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="60" >
                </TextBox>

                <TextBlock Text="Process No. :" TextAlignment="Right"  Grid.Row="1" Grid.Column="9"></TextBlock>
                <TextBox IsTabStop="False" IsReadOnly="True" x:Name="txtRouteNo" Grid.Column="11"  Grid.Row="1" ToolTip="Enter the Route No." 
                         Text="{Binding MandatoryFields.ROUTE_NO ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="60" >
                </TextBox>

                <TextBlock Text="Date :" TextAlignment="Right"  Grid.Row="7" Grid.Column="9"></TextBlock>
                <Control:DatePickerCus IsTabStop="False" IsEnabled="False" Name ="dtpSEQUENCE_DRAWING_ISSUE_DATE" Grid.Row="7" Grid.Column="11" Width="112"  HorizontalAlignment="Left"  SelectedDate="{Binding MandatoryFields.SEQUENCE_DRAWING_ISSUE_DATE, UpdateSourceTrigger=PropertyChanged}"  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedDateChanged">
                            <i:InvokeCommandAction Command="{Binding SequenceDrawingIssueDateOnChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Control:DatePickerCus>

            </Grid>
        </Border>
        <Border Grid.Row="7" Grid.Column="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="7"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="cmdSave" Content="Save Ctrl+S" Grid.Column="2" Width="100" Command="{Binding SaveClickCommand}" IsEnabled="{Binding MandatoryFields.IS_SAVE_ENABLED,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay }" KeyboardNavigation.IsTabStop="False" Control:AddedProperty.Image="Images/Save.png"></Button>
                <Button x:Name="cmdPrint" Content="Print F8" Grid.Column="4" Width="100" Command="{Binding PrintClickCommand}" KeyboardNavigation.IsTabStop="False" Control:AddedProperty.Image="Images/Print.png"></Button>
                <Button x:Name="cmdExportToExcel" Content="Export Excel" Grid.Column="6" Width="100" Command="{Binding ExportToExcelClickCommand}" KeyboardNavigation.IsTabStop="False" Control:AddedProperty.Image="Images/ExcelExport.png" ></Button>
            </Grid>
        </Border>

    </Grid>
</UserControl>
