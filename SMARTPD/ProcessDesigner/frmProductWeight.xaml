<UserControl x:Class="ProcessDesigner.frmProductWeight"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:toolKit="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:bhCustCtrl="clr-namespace:BHCustCtrl;assembly=BHCustCtrl"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"        
             xmlns:UICommon="clr-namespace:ProcessDesigner.UICommon"

        xmlns:uc="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls"  
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:si="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
        xmlns:Common="clr-namespace:ProcessDesigner.UICommon"       
        Name="ProductWeight"  Height="600" Width="900" >        
    <UserControl.Resources>
        <!--<CollectionViewSource x:Key="ShapeCodeViewSource" Source="{Binding Path=ProductWeight.DVShape}"/>-->
        <Common:DecimalConverter x:Key="DecimalConverter"/>
    </UserControl.Resources>
    <Grid>
        <Border>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"></RowDefinition>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>
                <Border BorderThickness="1" Margin="0,4,0,4">
                    <Grid>
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*"/>
                            <ColumnDefinition Width="50*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock  Text="CI Reference : " Grid.Row="0"  Grid.Column="0" TextAlignment="Right" FontWeight="Bold" />
                        <TextBlock  Text="{Binding  ProductWeight.CIreference}" Grid.Row="0"  Grid.Column="1" TextAlignment="Left" FontWeight="Bold" />
                        <Button Name="btnCalculate" Content="_Calculate" Height="40" Grid.Row="0"  Grid.Column="2" Width="100" Command="{Binding CalculateCommand}" />
                    </Grid>
                </Border>

                <TextBlock  Text="Weight Calculation  : " Grid.Row="1"   Style="{StaticResource HeaderText}"  ></TextBlock>
                <TextBlock  Text="All Dimensions in mm" Grid.Row="1"  Grid.Column="1" HorizontalAlignment="Right" TextAlignment="Right" Style="{StaticResource HeaderText}" VerticalAlignment="Center"  FontSize="10" ></TextBlock>

                <toolKit:DataGrid x:Name="dgvWeightCalc" Grid.Row="2" Grid.Column="0" AutoGenerateColumns="False"  HorizontalAlignment="Stretch" SelectionMode="Extended" SelectionUnit="FullRow" HorizontalContentAlignment="Stretch" 
                        RowHeaderWidth="20"   CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding ProductWeight.DVShapeDetails,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding ProductWeightSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         CurrentCell="{Binding CurrentCell,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"   UICommon:ScrollToTopBehavior.ScrollToTop="True"

      >
                    <toolKit:DataGrid.ContextMenu>
                        <ContextMenu >
                            <MenuItem Header="Delete" IsEnabled="{Binding DeleteButtonIsEnable}" Command="{Binding DeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}" />
                        </ContextMenu>
                    </toolKit:DataGrid.ContextMenu>
                    <toolKit:DataGrid.InputBindings>
                        <KeyBinding  Key="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=dgvWeightCalc, Path=SelectedItem}" />
                    </toolKit:DataGrid.InputBindings>
                    <i:Interaction.Behaviors>
                        <Common:DataGridBehaviorToolkit/>
                    </i:Interaction.Behaviors>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="RowEditEnding">
                            <i:InvokeCommandAction Command="{Binding RowEditEndingCommand}" CommandParameter="{Binding ElementName=dgvWeightCalc, Path=SelectedItem}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="BeginningEdit">
                            <si:CallMethodAction MethodName="OnBeginningEdit" TargetObject="{Binding}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="CurrentCellChanged">
                            <si:CallMethodAction MethodName="WeightCalc_CurrentCellChanged" TargetObject="{Binding}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="CellEditEnding">
                            <si:CallMethodAction MethodName="OnCellEditEnding" TargetObject="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <toolKit:DataGrid.Columns>
                        <toolKit:DataGridTemplateColumn Header="Shape Code" Width="100" SortMemberPath="SHAPE_CODE">
                            <toolKit:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SHAPE_CODE,UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </toolKit:DataGridTemplateColumn.CellTemplate>
                            <toolKit:DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <uc:ComboBoxWithSearch  DataSource="{Binding  RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.ProductWeight.DVShape}"  
                                             SelectedValue="{Binding SHAPE_CODE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  
                                             SelectedText="{Binding SHAPE_CODE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  
                                             SelectedItem="{Binding  RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.ShapeCode_SelectedItem,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged,NotifyOnTargetUpdated=True}"
                                             ColumnsHeader="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.DropdownHeaders}"
				                             SelectedValuePath="SHAPE_CODE"  DisplayValuePath="SHAPE_CODE"   IsReadOnly="True" DropDownWidth="300" DropDownHeight="200"                                    
                                              VerticalContentAlignment="Center" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectedItemChanged">
                                                <i:InvokeCommandAction  Command="{Binding ElementName=ProductWeight,Path=DataContext.OnShapeSelectionChanged}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </uc:ComboBoxWithSearch>
                                    <!--<bhCustCtrl:CustComboBox  x:Name="cmbOpMaster" IsSynchronizedWithCurrentItem="False"   
                                                    ItemsSource="{Binding Source={StaticResource ShapeCodeViewSource}}"
                                            SelectedValue="{Binding SHAPE_CODE,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,BindsDirectlyToSource=True}"  
				                            SelectedValuePath="SHAPE_CODE" DisplayMemberPath="SHAPE_CODE"   
                                            SelectedItem="{Binding ElementName=ProductWeight,Path=DataContext.ShapeCode_SelectedItem,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged,NotifyOnTargetUpdated=True}"
                                            VerticalContentAlignment="Center" IsEditable="False" >
                                        <toolKit:DataGridTextColumn Width="100"  Header="Shape Code" Binding="{Binding SHAPE_CODE}" />
                                        <toolKit:DataGridTextColumn Width="205"  Header="Shape" Binding="{Binding SHAPE_NAME}" />                                        
                                    </bhCustCtrl:CustComboBox>-->
                                </DataTemplate>
                            </toolKit:DataGridTemplateColumn.CellEditingTemplate>
                        </toolKit:DataGridTemplateColumn>
                        <toolKit:DataGridTextColumn Header="Dimension - I" Width="1.5*" Binding="{Binding HEAD1,UpdateSourceTrigger=PropertyChanged}" >
                            <toolKit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </toolKit:DataGridTextColumn.ElementStyle>
                            <toolKit:DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="IsReadOnly" Value="True"/>
                                </Style>
                            </toolKit:DataGridTextColumn.EditingElementStyle>
                        </toolKit:DataGridTextColumn>
                        <bhCustCtrl:DataGridNumericColumn Header="Value" Width="1*" Binding="{Binding VAL1, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}" MaxPrecision="10" MaxScale="2" ></bhCustCtrl:DataGridNumericColumn>

                        <toolKit:DataGridTextColumn Header="Dimension - II" Width="1.5*" Binding="{Binding HEAD2,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                            <toolKit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Text" Value="{Binding HEAD2,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                </Style>
                            </toolKit:DataGridTextColumn.ElementStyle>
                            <toolKit:DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="IsReadOnly" Value="True"/>
                                </Style>
                            </toolKit:DataGridTextColumn.EditingElementStyle>
                        </toolKit:DataGridTextColumn>
                        <bhCustCtrl:DataGridNumericColumn Header="Value" Width="1*" Binding="{Binding VAL2, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}" MaxPrecision="10" MaxScale="2" ></bhCustCtrl:DataGridNumericColumn>

                        <toolKit:DataGridTextColumn Header="Dimension - III" Width="1.5*" Binding="{Binding HEAD3,UpdateSourceTrigger=PropertyChanged}" >
                            <toolKit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </toolKit:DataGridTextColumn.ElementStyle>
                            <toolKit:DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="IsReadOnly" Value="True"/>
                                </Style>
                            </toolKit:DataGridTextColumn.EditingElementStyle>
                        </toolKit:DataGridTextColumn>
                        <bhCustCtrl:DataGridNumericColumn Header="Value" Width="1*" Binding="{Binding VAL3, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}" MaxPrecision="10" MaxScale="2" ></bhCustCtrl:DataGridNumericColumn>
                        <toolKit:DataGridTextColumn Header="Volume" Width="1*" Binding="{Binding VOLUME,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource DecimalConverter}}" >
                            <toolKit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </toolKit:DataGridTextColumn.ElementStyle>
                            <toolKit:DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                    <Setter Property="IsReadOnly" Value="True"/>
                                    <Setter Property="uc:TextBoxIntsOnly.Mask" Value="Decimal" />
                                </Style>
                            </toolKit:DataGridTextColumn.EditingElementStyle>
                        </toolKit:DataGridTextColumn>
                        <toolKit:DataGridTextColumn Header="+/-" Width="50" Binding="{Binding SIGN,UpdateSourceTrigger=PropertyChanged}" >
                            <toolKit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                </Style>
                            </toolKit:DataGridTextColumn.ElementStyle>
                            <toolKit:DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextAlignment" Value="Center"/>
                                    <Setter Property="MaxLength" Value="1"/>
                                </Style>
                            </toolKit:DataGridTextColumn.EditingElementStyle>
                        </toolKit:DataGridTextColumn>
                    </toolKit:DataGrid.Columns>
                </toolKit:DataGrid>
                <Border Grid.Row="3" BorderThickness="1" Margin="0,4,0,4">
                    <Grid >
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="100" ></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="160" ></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="110" ></ColumnDefinition>
                            <ColumnDefinition Width="150"></ColumnDefinition>
                            <ColumnDefinition Width="150"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding WeightOptionText}" Grid.Column="0" TextAlignment="Right" FontWeight="Bold" ></TextBlock>
                        <uc:DecimalTextBox Name="txtCheeseWeight" IsReadOnly="{Binding IsReadOnlyCheeseWeight}" Text="{Binding ProductWeight.CheesWeight,UpdateSourceTrigger=PropertyChanged,StringFormat=F2}"   
                                 Grid.Column="1" Common:FocusExtension.IsFocused="{Binding CheeseWtIsFocus}"  MaxLength="13" AllowNegative="True" MaxDecimalPlaces="2" Width="95" HorizontalAlignment="Left">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding LostFocusCheeseWeightCommand}" />
                                </i:EventTrigger>                                
                            </i:Interaction.Triggers>
                        </uc:DecimalTextBox>
                        <TextBlock Text="Kgs / 100 pcs" Grid.Column="2" TextAlignment="Left" Margin="10,0,0,0" FontStyle="Italic"/>
                        <uc:DecimalTextBox Name="txtTotal" Width="95" HorizontalAlignment="Left" IsReadOnly="True"  Text="{Binding ProductWeight.Total,UpdateSourceTrigger=PropertyChanged,StringFormat=F2}"   Grid.Column="3"  MaxLength="13" AllowNegative="True" MaxDecimalPlaces="2" />
                        <TextBlock Text="Lbs / 100 pcs"   Grid.Column="4" TextAlignment="Left" Margin="10,0,0,0" FontStyle="Italic"/>
                        <Button Name="btnOk" Content="_OK" Height="40"  Grid.Column="5"  Width="100" HorizontalAlignment="Right" Margin="0,0,2,0" Command="{Binding SaveCommand}" Click="btnOk_Click"/>
                        <Button Name="btnCancel" Content="_Cancel" Height="40"  Grid.Column="6"  Width="100" HorizontalAlignment="Left" Command="{Binding CloseCommand}" />
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Grid>
</UserControl>
