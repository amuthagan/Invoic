<UserControl x:Class="ProcessDesigner.frmRptFeatureWise"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions" 
        xmlns:il="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions"     
        xmlns:si="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
        xmlns:Control="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls" 
        xmlns:Lookup="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls"
        xmlns:UICommon="clr-namespace:ProcessDesigner.UICommon" 
        Height="600" Width="800" Background="{StaticResource WindowBackground}" Loaded="UserControl_Loaded">
    <Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="88"></RowDefinition>
                <RowDefinition Height="22"></RowDefinition>
                <RowDefinition Height="75*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border BorderThickness="2" Grid.Row="0" Grid.Column="0" Margin="5,5,5,5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"></RowDefinition>
                        <RowDefinition Height="10*"></RowDefinition>
                        <RowDefinition Height="10*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15*"></ColumnDefinition>
                        <ColumnDefinition Width="20*"></ColumnDefinition>
                        <ColumnDefinition Width="15*"></ColumnDefinition>
                        <ColumnDefinition Width="20*"></ColumnDefinition>
                        <ColumnDefinition Width="20*"></ColumnDefinition>
                        <ColumnDefinition Width="20*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Feature : " Grid.Column="0" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="0" Margin="5,5,5,5"></TextBlock>
                    <TextBlock Text="Feature1 : " Grid.Column="0" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="1" Margin="5,5,5,5"></TextBlock>
                    <TextBlock Text="Feature2 : " Grid.Column="0" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="2" Margin="5,5,5,5" ></TextBlock>
                    <TextBlock Text="Spec Min : " Grid.Column="2" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="0" Margin="5,5,5,5" ></TextBlock>
                    <TextBlock Text="Spec Max : " Grid.Column="2" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="1" Margin="5,5,5,5" ></TextBlock>
                    <TextBlock Text="Part Desc : " Grid.Column="2" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="2" Margin="5,5,5,5" ></TextBlock>

                    <Lookup:ComboBoxWithSearch x:Name="ltbFeature" Tag="Please enter/select Feature" HorizontalAlignment="Left" IsReadOnly="False"
                                     Grid.Column="1" Grid.Row="0" Width="140" MaxLength="50" UICommon:FocusExtension.IsFocused="{Binding DefaultControlFocus}"
                                     SelectedValuePath="FEATURE" DisplayValuePath="FEATURE" 
                                     SelectedValue="{Binding MandatoryFields.FEATURE,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                               SelectedText="{Binding MandatoryFields.FEATURE,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                     DataSource="{Binding FeatureDataSource}"
                                     SelectedItem="{Binding FeatureselectedRow,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     ButtonVisibility="{Binding FeatureHasDropDownVisibility}" 
                                     ColumnsHeader="{Binding FeatureDropDownItems}"
                                     >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction Command="{Binding FeatureselectedItemChangedCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding FeatureEndEditCommand}" CommandParameter="N"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Lookup:ComboBoxWithSearch.InputBindings>
                            <KeyBinding  Key="Enter" Command="{Binding FeatureEndEditCommand}" CommandParameter="Y" />
                        </Lookup:ComboBoxWithSearch.InputBindings>
                    </Lookup:ComboBoxWithSearch>
                    <Lookup:ComboBoxWithSearch x:Name="ltbFeature1" Tag="Please enter/select Feature1" HorizontalAlignment="Left" IsReadOnly="False"
                                     Grid.Column="1" Grid.Row="1" Width="140" MaxLength="50"
                                     SelectedValuePath="FEATURE" DisplayValuePath="FEATURE" 
                                     SelectedValue="{Binding MandatoryFields.FEATURE1,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                     SelectedText="{Binding MandatoryFields.FEATURE1,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                     DataSource="{Binding Feature1DataSource,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                     SelectedItem="{Binding Feature1electedRow,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     ButtonVisibility="{Binding Feature1HasDropDownVisibility}" 
                                     ColumnsHeader="{Binding Feature1DropDownItems}"
                                     >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction Command="{Binding Feature1electedItemChangedCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding Feature1EndEditCommand}" CommandParameter="N"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Lookup:ComboBoxWithSearch.InputBindings>
                            <KeyBinding  Key="Enter" Command="{Binding Feature1EndEditCommand}" CommandParameter="Y" />
                        </Lookup:ComboBoxWithSearch.InputBindings>
                    </Lookup:ComboBoxWithSearch>
                    <Lookup:ComboBoxWithSearch x:Name="ltbFeature2" Tag="Please enter/select Feature2" HorizontalAlignment="Left" IsReadOnly="False"
                                     Grid.Column="1" Grid.Row="2" Width="140" MaxLength="50"
                                     SelectedValuePath="FEATURE" DisplayValuePath="FEATURE" 
                                     SelectedValue="{Binding MandatoryFields.FEATURE2,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                     SelectedText="{Binding MandatoryFields.FEATURE2,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                     DataSource="{Binding Feature2DataSource}"
                                     SelectedItem="{Binding Feature2electedRow,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     ButtonVisibility="{Binding Feature2HasDropDownVisibility}" 
                                     ColumnsHeader="{Binding Feature2DropDownItems}"
                                     >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction Command="{Binding Feature2electedItemChangedCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding Feature2EndEditCommand}" CommandParameter="N"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Lookup:ComboBoxWithSearch.InputBindings>
                            <KeyBinding  Key="Enter" Command="{Binding Feature2EndEditCommand}" CommandParameter="Y" />
                        </Lookup:ComboBoxWithSearch.InputBindings>
                    </Lookup:ComboBoxWithSearch>

                    <TextBox  x:Name="txtSPEC_MIN" Grid.Column="3"  Grid.Row="0" Tag="Please enter spec min" Width="140" 
                         Text="{Binding MandatoryFields.SPEC_MIN ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="30">
                        <i:Interaction.Behaviors >
                            <UICommon:TabOnEnterTextBoxBehavior />
                        </i:Interaction.Behaviors>
                    </TextBox>
                    <TextBox x:Name="txtSPEC_MAX" Grid.Column="3"  Grid.Row="1" Tag="Please enter spec Max" Width="140" 
                         Text="{Binding MandatoryFields.SPEC_MAX ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" MaxLength="30">
                        <i:Interaction.Behaviors >
                            <UICommon:TabOnEnterTextBoxBehavior />
                        </i:Interaction.Behaviors>
                    </TextBox>
                    <TextBox x:Name="txtPART_DESC" Grid.Column="3"  Grid.Row="2" Grid.ColumnSpan="3" Tag="Please enter Part Desc "  Margin="0,0,5,0"
                         Text="{Binding MandatoryFields.PART_DESC ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                        <i:Interaction.Behaviors >
                            <UICommon:TabOnEnterTextBoxBehavior />
                        </i:Interaction.Behaviors>
                    </TextBox>
                    <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="4" Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="90"/>
                            <ColumnDefinition Width="90"/>
                            <ColumnDefinition Width="90"/>
                        </Grid.ColumnDefinitions>

                        <Button Name="Refresh" Content="_Refresh" Grid.Column="1" Height="45" Width="80" Command="{Binding RefreshClickCommand}" ToolTip="Click refresh report" Control:AddedProperty.Image="Images/Refresh.png"></Button>
                        <Button x:Name="PrintButton" Grid.Column="2" Width="80"  Content="Print" Height="45" ToolTip="Click print report" Command="{Binding PrintClickCommand}" Control:AddedProperty.Image="Images/Print.png"></Button>
                        <Button x:Name="ExportToExcelButton" Lookup:AddedProperty.Image="Images/ExcelExport.png" Height="45" Grid.Column="3" Width="80"  Content="Export Excel"  ToolTip="Click export report to Excel" Command="{Binding ExportToExcelClickCommand}" ></Button>
                    </Grid>
                </Grid>
            </Border>

            <TextBlock Text="{Binding MandatoryFields.GRID_TITLE,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" Style="{StaticResource HeaderText}"  VerticalAlignment="Top"  ></TextBlock>
            <Border BorderThickness="2" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6" >
                <DataGrid  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6" Name="DataGridResult" ItemsSource="{Binding MandatoryFields.GridData,UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserAddRows="False"
                     CanUserSortColumns="True"  CanUserDeleteRows="False" RowHeaderWidth="20" CanUserResizeRows="False" SelectionUnit="FullRow" SelectionMode="Single" UICommon:ScrollToTopBehavior.ScrollToTop="True" >
                    <DataGrid.Columns>
                        <DataGridTextColumn IsReadOnly="True"  Header="S.No." Width="80" Binding="{Binding SNO,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True" Header="Part Number" Width="110" Binding="{Binding PART_NO,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Part Description" Width="250" Binding="{Binding PART_DESC,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Quality" Width="160" Binding="{Binding QUALITY,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Feature" Width="160" Binding="{Binding FEATURE,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Spec.Min" Width="120" Binding="{Binding SPEC_MIN,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Spec.Max" Width="120" Binding="{Binding SPEC_MAX,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Hdtk .Min" Width="120" Binding="{Binding CTRL_SPEC_MIN,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Hdtk .Max" Width="120" Binding="{Binding CTRL_SPEC_MAX,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Collar/Flange Dia Min" Width="160" Binding="{Binding COLLAR_FLANGE_DIA_MIN,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Collar/Flange Dia Max" Width="160" Binding="{Binding COLLAR_FLANGE_DIA_MAX,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Collar/Flange Tk.Min" Width="160" Binding="{Binding COLLAR_FLANGE_TK_MIN,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Collar/Flange Tk.Max" Width="160" Binding="{Binding COLLAR_FLANGE_TK_MAX,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Forging Cost Center" Width="160" Binding="{Binding FORGING_COST_CENTER,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Wire Dia Min" Width="110" Binding="{Binding WIRE_DIA_MIN,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Wire Dia Max" Width="110" Binding="{Binding WIRE_DIA_MAX,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True"  Header="Customer Name" Width="160" Binding="{Binding CUST_NAME,UpdateSourceTrigger=PropertyChanged}"  >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <si:CallMethodAction MethodName="DataGridResult_MouseDoubleClick" TargetObject="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </Border>

            <!--<Border BorderThickness="2" Grid.Row="1" Grid.Column="0">
                <DataGrid Grid.Row="1" Grid.Column="0" Margin="5,5,5,5"></DataGrid>
            </Border>-->

        </Grid>
    </Border>
</UserControl>
