<UserControl x:Class="ProcessDesigner.frmToolAdmin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:uc="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls"
         xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"  
          xmlns:ImageViewer="clr-namespace:PreviewHandlers;assembly=PreviewHandlers"
        xmlns:Common="clr-namespace:ProcessDesigner.UICommon"
             xmlns:UICommon="clr-namespace:ProcessDesigner.UICommon"

        xmlns:si="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
        xmlns:Control="clr-namespace:ProcessDesigner.UserControls;assembly=ProcessDesigner.UserControls"                 
         Height="600" Width="800" Background="{StaticResource WindowBackground}" Loaded="UserControl_Loaded">
    <UserControl.InputBindings>
        <KeyBinding Key="F3" Command="{Binding AddCommand}" CommandParameter="{Binding ElementName=canParameters}" />
        <KeyBinding Key="F5" Command="{Binding EditCommand}" CommandParameter="{Binding ElementName=canParameters}"/>
        <KeyBinding  Modifiers="Control" Key="S" Command="{Binding SaveCommand}" />
        <KeyBinding Key="F9" Command="{Binding CloseCommand}" />
    </UserControl.InputBindings>
    <Border Margin="1" BorderThickness="1">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <ToolBar  Grid.Row="0" KeyboardNavigation.TabNavigation="None" >
                <Button Content="Add F3" IsTabStop="False"   Height="50" Padding="10,0,10,0"  ToolTip="Add New Record" uc:AddedProperty.Image="Images/Add.png" IsEnabled="{Binding AddButtonIsEnable}" Command="{Binding AddCommand}" CommandParameter="{Binding ElementName=canParameters}"/>
                <Button Content="Edit/View F5" IsTabStop="False" Height="50" Padding="10,0,10,0" ToolTip="Edit or View Record" uc:AddedProperty.Image="Images/Edit.png" IsEnabled="{Binding EditButtonIsEnable}" Command="{Binding EditCommand}" CommandParameter="{Binding ElementName=canParameters}" />
                <Button Content="Save Ctrl + S" IsTabStop="False"   Height="50" Padding="10,0,10,0" ToolTip="Save Record" uc:AddedProperty.Image="Images/Save.png" IsEnabled="{Binding SaveButtonIsEnable}"  Command="{Binding SaveCommand}" />
                <Button Content="Insert Template"  IsTabStop="False" Height="50" Padding="10,0,10,0" ToolTip="Insert New Template" uc:AddedProperty.Image="Images/AddImage.png" Command="{Binding InsertTemplateCommand}"/>
                <Button Content="Close F9" IsTabStop="False" Height="50" Padding="10,0,10,0" ToolTip="Close Current Active Window" uc:AddedProperty.Image="Images/Close.png" Command="{Binding CloseCommand}" />
            </ToolBar>
            <Grid Grid.Row="1" KeyboardNavigation.TabNavigation="Cycle">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition Height="350"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Border  Grid.Row="0" BorderThickness="1" Margin="2" >
                    <Grid  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15*"></ColumnDefinition>
                            <ColumnDefinition Width="50*"></ColumnDefinition>
                            <ColumnDefinition Width="15*"></ColumnDefinition>
                            <ColumnDefinition Width="20*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Family Name : " Grid.Column="0" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="0" ></TextBlock>
                        <uc:ComboBoxCus  Grid.Column="1" Grid.Row ="0" x:Name="cmbFamilyCode" ColumnsHeader="{Binding DropdownHeaders}" ButtonVisibility="{Binding CmbButtonVisibility}"
					                    DataSource="{Binding ToolAdmin.DVToolFamily,UpdateSourceTrigger=PropertyChanged}"  SelectedItem="{Binding ToolAdmin.SelectedFamily,UpdateSourceTrigger=PropertyChanged}" 
                                        SelectedValuePath="FAMILY_NAME" SelectedValue="{Binding ToolAdmin.FAMILY_NAME,UpdateSourceTrigger=PropertyChanged}" MaxLength="200" Margin="0,5,0,4" Tag="Please enter/select Family Name"
                                        IsReadOnly="{Binding IsReadOnlyFamilyCode}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding OnSelectionChanged}" CommandParameter="{Binding ElementName=canParameters}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewLostKeyboardFocus">
                                    <si:CallMethodAction MethodName="FamilyName_PreviewLostKeyboardFocus" TargetObject="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </uc:ComboBoxCus>
                        <TextBlock Text="Family Code : " Grid.Column="2" VerticalAlignment="Center"  HorizontalAlignment="Right" Grid.Row="0" ></TextBlock>
                        <TextBox Grid.Column="3" Text="{Binding ToolAdmin.FAMILY_CD,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsReadOnlyFamilyCode}" Width="35" HorizontalAlignment="Left" Margin="0,6,0,0" MaxLength="4" Tag="Please enter/verify Family Code" Common:FocusExtension.IsFocused="{Binding IsFocusedFamilyCode}" VerticalAlignment="Top" />

                    </Grid>
                </Border>
                <Border Grid.Row="1" Margin="2,1,2,3"  BorderThickness="1"  Background="White">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction  Command="{Binding ParametersClick}" CommandParameter="{Binding ElementName=canParameters}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image Name="imgPhoto" Stretch="Uniform" HorizontalAlignment="Left" ScrollViewer.CanContentScroll="True" Margin="2"  >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction  Command="{Binding ParametersClick}" CommandParameter="{Binding ElementName=canParameters}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                    <!--<WindowsFormsHost  x:Name="imgHost" >
                    <ImageViewer:PreviewContainer x:Name="imgToolAdmin">
                    </ImageViewer:PreviewContainer>
                </WindowsFormsHost>-->
                </Border>
                <Canvas Name="canParameters" Grid.Row="1" Margin="3"   >

                </Canvas>
                <GroupBox Grid.Row="2" Header="{Binding HeaderText}">
                    <DataGrid Name="dgrdParameters"  ItemsSource="{Binding ToolAdmin.DVToolParameter,UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserAddRows="False"
                      CanUserDeleteRows="False" RowHeaderWidth="20" SelectedItem="{Binding ToolAdmin.SelectedParameter,UpdateSourceTrigger=PropertyChanged}" CanUserResizeRows="False" UICommon:ScrollToTopBehavior.ScrollToTop="True" >
                        <!--<DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=canParameters}" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>-->
                        <DataGrid.InputBindings>
                            <KeyBinding  Key="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=canParameters}" />
                        </DataGrid.InputBindings>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="RowEditEnding">
                                <i:InvokeCommandAction  Command="{Binding RowEditEndingCommand}" CommandParameter="{Binding ElementName=canParameters}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="BeginningEdit">
                                <si:CallMethodAction MethodName="OnBeginningEdit" TargetObject="{Binding}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="CellEditEnding">
                                <si:CallMethodAction MethodName="OnCellEditEnding" TargetObject="{Binding}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="CurrentCellChanged">
                                <i:InvokeCommandAction  Command="{Binding CurrentCellChangedCommand}" CommandParameter="{Binding ElementName=canParameters}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.Columns>
                            <DataGridTextColumn  Header="Parameter Code" Width="119" Binding="{Binding PARAMETER_CD,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridTextColumn}},Path=IsReadOnlyPrdCode}"   >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <Setter Property="MaxLength" Value="4"/>
                                        <Setter Property="CharacterCasing" Value="Upper" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn  Header="Parameter" Width="1*" Binding="{Binding PARAMETER_NAME,UpdateSourceTrigger=PropertyChanged}"  >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <Setter Property="MaxLength" Value="100"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn  Header="Data Type" Width="86" Binding="{Binding DATATYPE,UpdateSourceTrigger=PropertyChanged}"  Control:TextBoxIntsOnly.Mask="Decimal"  >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox" >
                                        <Setter Property="MaxLength" Value="2"  />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                        <Setter Property="Control:TextBoxIntsOnly.Mask" Value="UnSignedDec"/>
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn  Header="Default Visible" Width="111" Binding="{Binding DEFAULT_VISIBLE,UpdateSourceTrigger=PropertyChanged}"  >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <Setter Property="MaxLength" Value="1"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                        <Setter Property="Control:TextBoxIntsOnly.Mask" Value="UnSignedDec"/>
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn  Header="Default Value" Width="210" Binding="{Binding DEFAULT_VALUE,UpdateSourceTrigger=PropertyChanged}"  >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="VerticalAlignment"  Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <Setter Property="MaxLength" Value="25"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </Grid>
        </Grid>
    </Border>
</UserControl>
